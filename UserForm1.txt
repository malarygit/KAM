Private Sub Label2_Click()

End Sub

Private Sub TextBox1_Change()

End Sub

'###########################################
' Initialiser la pop in d'ajout de compétences
'###########################################
Private Sub UserForm_Initialize()
    Dim rg          As Range, connectedUserFormulaire As String, wb As Workbook
    Set wb = ThisWorkbook
    connectedUserFormulaire = wb.ActiveSheet.Name
    Sheets(connectedUserFormulaire).Activate
    Set rg = Range("listBox_plage")
    
    'Fixer la taille du userForm
    With Me
        .Height = 400
        .Width = 750
        .BackColor = RGB(217, 217, 217)
        .BorderStyle = fmBorderStyleSingle
        .BorderColor = RGB(150, 150, 150)
        .Caption = FW_VBA.RetrieveMessageToDisplay("vba_code_message", "userformAddSkillsTitle")
        .Top = Application.Top + (Application.Height - Me.Height) / 2
        .Left = Application.Left + (Application.Width - Me.Width) / 2
    End With
    

    
    'Fixer la taille de la listBox
    With ListBox1
        'Initialiser la listBox avec les compétences pouvant être ajouté et présentes dans la plage dynamique listBox_plage
        .RowSource = rg.Address
        '.ColumnHeads = True
        '.Width = 310
        .Height = 200
        
        '.Top = Application.Top + (Application.Height - Me.Height) / 2
        '.Left = UserForm1.Left + (UserForm1.Width - Me.Width) / 2
    End With
    
    'Fixer la taille du textBox
    With TextBox1
        .Width = 698
        .Height = 50
        .Locked = True
        .BackColor = RGB(217, 217, 217)
        .BorderStyle = fmBorderStyleNone
        .Text = FW_VBA.RetrieveMessageToDisplay("vba_code_message", "userformAddSkillsMessage")
    End With
    
    With CommandButton1
    .Font.Bold = True
    .Font.Size = 10
    .ForeColor = RGB(250, 250, 250)
    .BackColor = RGB(112, 173, 71)
    .Width = 114
    .Height = 30
    End With


     With CommandButton2
    .Font.Bold = True
    .Font.Size = 10
    .ForeColor = RGB(250, 250, 250)
    .Width = 114
    .Height = 30
    .BackColor = RGB(192, 0, 0)
    End With
    
    'Désélectionner tous les éléments de la listBox
    Dim k As Integer
        For k = 0 To Me.ListBox1.ListCount
        Me.ListBox1.Selected(k) = False
    Next k
    
End Sub

'###########################################
' Action associée au bouton Quitter
'###########################################
Private Sub CommandButton2_Click()
    Unload Me
End Sub


'###########################################
' Action associée au bouton Sauvegarder : on récupère les id des domaines de compétences et cocher les cases dans le tableau dédié dnas l'onglet GestionRef pour l'utilisateur courant
'###########################################
Private Sub CommandButton1_Click()
    Dim wb As Workbook, indexSkillsSelected As Collection, mappingIndexIdSkillsInListBox As Variant, idSkillsSelected As Collection, connectedUser As String, connectedUserFormulaire As String, currentUser As String, confirmationMessageDisplayed As String
    Set wb = ThisWorkbook
    connectedUserFormulaire = wb.ActiveSheet.Name
    connectedUser = Left(connectedUserFormulaire, InStrRev(connectedUserFormulaire, "_") - 1)
    currentUser = Range("nom_suivi")
    
    ' Désactiver les mises à jour IHM
    Application.ScreenUpdating = False
    'Récupérer les index des compétences sélectionnées
    Set indexSkillsSelected = FW_VBA.GetSelectedRows(Me.ListBox1)
    'Déduire mes id des compétences sélectionnées
    mappingIndexIdSkillsInListBox = Range("vba_ajout_competence_index")
    Set idSkillsSelected = extractCompetenceIdArrayFromListBox(indexSkillsSelected, mappingIndexIdSkillsInListBox)
    
    
    If idSkillsSelected.Count = 0 Then 'Cas au limite : aucune compétence sélectionnée
        'Afficher le message
        MsgBox FW_VBA.RetrieveMessageToDisplay("vba_code_message", "emptyNewSkillsListMessage"), Title:="Information"
     Else 'Cas nominal : boucler sur les compétences sélectionnées pour les ajouter
        'Calculer le message à afficher, il est différent si on saisit des compétences pour soi ou pour une personne que l'on supervise
        If currentUser = connectedUser Then
            confirmationMessageDisplayed = FW_VBA.RetrieveMessageToDisplay("vba_code_message", "informationBeforeAddingSkillsMessage1")
        Else
            confirmationMessageDisplayed = FW_VBA.RetrieveMessageToDisplay("vba_code_message", "informationBeforeAddingSkillsMessage2")
            confirmationMessageDisplayed = Replace(confirmationMessageDisplayed, "{{nom_suivi}}", currentUser)
        End If
        'Afficher le message
        ConfirmAddCompetence = MsgBox(confirmationMessageDisplayed, vbQuestion + vbYesNo + vbDefaultButton1, FW_VBA.RetrieveMessageToDisplay("vba_code_message", "informationBeforeAddingSkillsTitle"))
        
        If ConfirmAddCompetence = vbYes Then
        Dim i As Integer, n As Integer, usersSkillsConfiguration As Variant, range_x As String, range_y As Integer, indexIdSkill As Integer
            i = 0
            n = 0
            'Initialiser les paramètres contenant la référence à la table où l'on saisit les compétences par acteur, ainsi que la position (x et y) du connectedUser dans l'onglet GestionRef
            usersSkillsConfiguration = Range("tab_Matrice_KAM_Utilisateur")
            indexIdSkill = FW_VBA.returnedIndexColumnHeader("Tab_Matrice_KAM_Utilisateur", "Id")
            range_x = Range("range_x_matrice_KAM")  ' Contient la colonne où se trouve le currentUser dans la table. Calcul réalisé dans le fichier excel. Exemple: C
            range_y = CInt(Range("range_y_matrice_KAM")) ' Contient le numéro de ligne de l'entête dans l'onglet GestionRef où se trouve le currentUser. Calcul réalisé dans le fichier excel. Exemple: 1
            
            Sheets("GestionRef").Activate
            'Boucler sur le tableau de configuration des compétences
            For i = 1 To UBound(usersSkillsConfiguration)
            'Ajouter la "x" dans la bonne cellule
                If FW_VBA.IsInCollection(CStr(usersSkillsConfiguration(i, indexIdSkill)), idSkillsSelected) Then
                    Range(range_x & (range_y + i)) = True
                End If
            Next
        'Fermer le userForm
            Unload Me
        End If
        
    End If
    'Afficher l'onglet de Suivi
    Sheets(connectedUserFormulaire).Activate
    'Réactiver les mises à jour IHM
    Application.ScreenUpdating = True
    
End Sub


'###########################################
' Permet de renvoyer une collection contenant les id des compétences, via les index des lignes sélectionnées dans la listBox
'###########################################
Function extractCompetenceIdArrayFromListBox(listBoxCol As Collection, arr As Variant) As Collection
    Dim i As Integer, j As Integer, coll As New Collection
    
    For i = 1 To listBoxCol.Count
        For j = 1 To UBound(arr)
            If CInt(listBoxCol.Item(i) + 1) = CInt(arr(j, 1)) Then
                coll.Add CInt(arr(j, 2))
            End If
        Next
    Next
    
    Set extractCompetenceIdArrayFromListBox = coll
End Function





